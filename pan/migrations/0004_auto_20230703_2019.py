# Generated by Django 4.1.3 on 2023-07-03 17:19

from django.db import migrations

def load_admin(apps, schema_editor):
    User = apps.get_model("auth", "User")
    User(password='pbkdf2_sha256$390000$9UerMhshGYQp9uQl7mrIqU$LdDjTmtsQxCrHi8CeUPpJQxnT7fSF3oQWb/LfuJaIBQ=', is_superuser=True, username='Admin', is_staff=True, is_active=True,).save()

def load_role(apps, schema_editor):
    Role = apps.get_model("pan", "Role")
    Role(role_name='администратор', role_key='admin', create_by_id=1, update_by_id=1,).save()
    Role(role_name='продвинутый пользователь', role_key='member', create_by_id=1, update_by_id=1, ).save()
    Role(role_name='обычный пользователь', role_key='common', create_by_id=1, update_by_id=1, ).save()

def load_limit(apps, schema_editor):
    Limit = apps.get_model("pan", "Limit")
    Limit(limit_name='Емкость облачного диска', limit_key='storage', create_by_id=1, update_by_id=1,).save()
    Limit(limit_name='Ограничение на видео', limit_key='video', create_by_id=1, update_by_id=1, ).save()
    Limit(limit_name='Ограничение на звук', limit_key='audio', create_by_id=1, update_by_id=1, ).save()
    Limit(limit_name='Ограничение на изображение', limit_key='image', create_by_id=1, update_by_id=1, ).save()


def load_rolelimit(apps, schema_editor):
    RoleLimit = apps.get_model("pan", "RoleLimit")
    RoleLimit(value=17_179_869_184, create_by_id=1, limit_id=1, role_id=1, update_by_id=1,).save()
    RoleLimit(value=83_886_080, create_by_id=1, limit_id=2, role_id=1, update_by_id=1, ).save()
    RoleLimit(value=83_886_080, create_by_id=1, limit_id=3, role_id=1, update_by_id=1, ).save()
    RoleLimit(value=8_589_934_592, create_by_id=1, limit_id=1, role_id=2, update_by_id=1, ).save()
    RoleLimit(value=41_943_040, create_by_id=1, limit_id=2, role_id=2, update_by_id=1, ).save()
    RoleLimit(value=41_943_040, create_by_id=1, limit_id=3, role_id=2, update_by_id=1, ).save()
    RoleLimit(value=5_368_709_120, create_by_id=1, limit_id=1, role_id=3, update_by_id=1, ).save()
    RoleLimit(value=20_971_520, create_by_id=1, limit_id=2, role_id=3, update_by_id=1, ).save()
    RoleLimit(value=20_971_520, create_by_id=1, limit_id=3, role_id=3, update_by_id=1, ).save()
    RoleLimit(value=83_886_080, create_by_id=1, limit_id=4, role_id=1, update_by_id=1, ).save()
    RoleLimit(value=41_943_040, create_by_id=1, limit_id=4, role_id=2, update_by_id=1, ).save()
    RoleLimit(value=20_971_520, create_by_id=1, limit_id=4, role_id=3, update_by_id=1, ).save()


def load_filetype(apps, schema_editor):
    FileType = apps.get_model("pan", "FileType")
    FileType( type_name='excel', suffix='.xlsx', create_by_id=1, update_by_id=1,).save()
    FileType( type_name='zip', suffix='.zip', create_by_id=1, update_by_id=1, ).save()
    FileType( type_name='pdf', suffix='.pdf', create_by_id=1, update_by_id=1, ).save()
    FileType( type_name='word', suffix='.docx', create_by_id=1, update_by_id=1, ).save()
    FileType( type_name='word', suffix='.doc', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='rar', suffix='.rar', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='png', suffix='.png', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='jpg', suffix='.jpg', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='ppt', suffix='.ppt', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='txt', suffix='.txt', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='mp4', suffix='.mp4', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='mp3', suffix='.mp3', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='unknown', suffix='', create_by_id=None, update_by_id=None, ).save()
    FileType(type_name='waf', suffix='.waf', create_by_id=1, update_by_id=1, ).save()
    FileType(type_name='svg', suffix='.svg', create_by_id=1, update_by_id=1, ).save()



class Migration(migrations.Migration):

    dependencies = [
        ('pan', '0003_alter_limit_options_alter_message_options_and_more'),
    ]

    operations = [
        migrations.RunPython(load_admin),
        migrations.RunPython(load_role),
        migrations.RunPython(load_limit),
        migrations.RunPython(load_rolelimit),
        migrations.RunPython(load_filetype),
    ]
